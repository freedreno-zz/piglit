[require]
GLSL >= 1.00 es
GL >= 2.0 es

[vertex shader]
attribute vec4 vertex;
mat4 proj = mat4(
	2.0/250.0, 0.0, 0.0, -1.0,
	0.0, 2.0/250.0, 0.0, -1.0,
	0.0, 0.0, -1.0, 0.0,
	0.0, 0.0, 0.0, 1.0);

uniform vec2 c;
uniform vec2 r;
uniform mat2x2 expected;
varying vec4 color;

void main() {
  gl_Position = vertex;
	gl_Position *= proj;
  mat2x2 result = outerProduct(c, r);
  color = (result == expected) ? vec4(0, 1, 0, 1) : vec4(1, 0, 0, 1);
}

[fragment shader]

varying vec4 color;
void main() { gl_FragColor = color; }

[test]
clear color 0.5 0.5 0.5 0.0
clear


uniform vec2 c  2 3
uniform vec2 r  4 5
uniform mat2x2 expected  8 12 10 15
draw rect 10 10 10 10
probe rgb 15 15 0.0 1.0 0.0

uniform vec2 c  3 4
uniform vec2 r  5 6
uniform mat2x2 expected  15 20 18 24
draw rect 30 10 10 10
probe rgb 35 15 0.0 1.0 0.0

uniform vec2 c  4 5
uniform vec2 r  6 7
uniform mat2x2 expected  24 30 28 35
draw rect 50 10 10 10
probe rgb 55 15 0.0 1.0 0.0

uniform vec2 c  5 6
uniform vec2 r  7 8
uniform mat2x2 expected  35 42 40 48
draw rect 70 10 10 10
probe rgb 75 15 0.0 1.0 0.0
