# Test generated by:
# ../../../glsl-1.10/variable-index-write.sh 1.20

[require]
GLSL >= 1.20

[vertex shader]
#version 120
uniform mat4x4 src_matrix;
uniform vec4 v;
uniform vec4 expect;
uniform int index;
uniform int col;
uniform vec4 value;

void main()
{
    gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;

    mat4x4[3] dst_matrix = mat4x4[3](mat4x4(0.0), mat4x4(0.0), mat4x4(0.0));

    /* Patch the supplied matrix with the supplied value.  If the resulting
     * matrix is correct, it will transform the input vector to the expected
     * value.  Verify that the distance between the result and the expected
     * vector is less than epsilon.
     *
     * NOTE: This test assumes that reads of arrays using non-constant
     * indicies works correctly.  If reads and writes happen to fail in an
     * identical manner, this test may give false positives.
     */
    dst_matrix[1] = src_matrix;
    dst_matrix[1][1] = value;
    gl_FrontColor = (distance(dst_matrix[1] * v, expect) < 1e-6)
        ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);
}

[fragment shader]
#version 120
void main() { gl_FragColor = gl_Color; }

[test]
clear color 0.5 0.5 0.5 0.5
clear
ortho

uniform vec4 v 0.0394868046587045 0.8922408276905568 0.3337495624366961 0.8732295730825839
uniform vec4 expect 1.03935908892461 1.18846180713529 1.10078681232072 1.72434439561820
uniform mat4x4 src_matrix 0.922040144261674 0.158053783109488 0.357016429866574 0.836368810383957 666.0 777.0 888.0 999.0 0.350720358904176 0.912192627475775 0.688544081259531 0.913891056231967 0.442058176039301 0.829835836794679 0.365674411003021 0.879197364462782
uniform vec4 value 0.560251913703792 0.171634921595771 0.602494709909111 0.693273570571311
draw rect 90 5 10 10
probe rgb 95 10 0.0 1.0 0.0
